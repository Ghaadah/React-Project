{"ast":null,"code":"var _jsxFileName = \"/Users/raghadalmusawi/Desktop/myapp/src/Views/Dat.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { backgroundColors } from \"../Uitls/chartColors\";\nimport useFetchData from \"../Hooks/GetAPI\"; // Import the custom hook\nimport \"chart.js/auto\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatPage = ({\n  title\n}) => {\n  _s();\n  const url = \"https://cs464p564-frontend-api.vercel.app/api/countries\";\n\n  // Call the custom hook and pass the URL to fetch the data from the API\n  const {\n    data: countries,\n    isLoaded,\n    error\n  } = useFetchData(url);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  const languageCounts = countries\n  //flatMap- flatten the languages arrays into single array\n  .flatMap(item => item.official_languages)\n  //reduce - count each language by incrementing its count in an object(languageCounts, where each key is a language, and the value is its count.)\n  .reduce((acc, language) => {\n    acc[language] = (acc[language] || 0) + 1;\n    return acc;\n  }, {});\n  const labels = Object.keys(languageCounts);\n  console.log(labels);\n  const dataValues = Object.values(languageCounts);\n  console.log(dataValues);\n  const data = {\n    labels: labels,\n    datasets: [{\n      data: dataValues,\n      backgroundColor: backgroundColors.slice(0, labels.length),\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container m-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"South America Spoken Languages Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chartContainer,\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(DatPage, \"V/gGyV2HFbOcGKy2E8y3I29L1Do=\", false, function () {\n  return [useFetchData];\n});\n_c = DatPage;\nconst styles = {\n  chartContainer: {\n    maxWidth: \"80%\",\n    width: \"100%\",\n    height: \"100%\",\n    margin: \"20px auto\"\n  }\n};\nexport default Dat;\nvar _c;\n$RefreshReg$(_c, \"DatPage\");","map":{"version":3,"names":["React","backgroundColors","useFetchData","Doughnut","jsxDEV","_jsxDEV","DatPage","title","_s","url","data","countries","isLoaded","error","children","message","fileName","_jsxFileName","lineNumber","columnNumber","languageCounts","flatMap","item","official_languages","reduce","acc","language","labels","Object","keys","console","log","dataValues","values","datasets","backgroundColor","slice","length","borderWidth","className","style","styles","chartContainer","_c","maxWidth","width","height","margin","Dat","$RefreshReg$"],"sources":["/Users/raghadalmusawi/Desktop/myapp/src/Views/Dat.js"],"sourcesContent":["import React from \"react\";\nimport { backgroundColors } from \"../Uitls/chartColors\";\nimport useFetchData from \"../Hooks/GetAPI\"; // Import the custom hook\nimport \"chart.js/auto\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst DatPage = ({ title }) => {\n  const url = \"https://cs464p564-frontend-api.vercel.app/api/countries\";\n\n  // Call the custom hook and pass the URL to fetch the data from the API\n  const { data: countries, isLoaded, error } = useFetchData(url);\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  const languageCounts = countries\n    //flatMap- flatten the languages arrays into single array\n    .flatMap((item) => item.official_languages)\n    //reduce - count each language by incrementing its count in an object(languageCounts, where each key is a language, and the value is its count.)\n    .reduce((acc, language) => {\n      acc[language] = (acc[language] || 0) + 1;\n      return acc;\n    }, {});\n\n  const labels = Object.keys(languageCounts);\n  console.log(labels);\n\n  const dataValues = Object.values(languageCounts);\n  console.log(dataValues);\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        data: dataValues,\n        backgroundColor: backgroundColors.slice(0, labels.length),\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <section className=\"container m-2\">\n      <h2>South America Spoken Languages Chart</h2>\n      <div style={styles.chartContainer}>\n        <Doughnut data={data} />\n      </div>\n    </section>\n  );\n};\nconst styles = {\n  chartContainer: {\n    maxWidth: \"80%\",\n    width: \"100%\",\n    height: \"100%\",\n    margin: \"20px auto\",\n  },\n};\nexport default Dat;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,OAAOC,YAAY,MAAM,iBAAiB,CAAC,CAAC;AAC5C,OAAO,eAAe;AACtB,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,GAAG,GAAG,yDAAyD;;EAErE;EACA,MAAM;IAAEC,IAAI,EAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGX,YAAY,CAACO,GAAG,CAAC;EAC9D,IAAII,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAAS,QAAA,GAAK,SAAO,EAACD,KAAK,CAACE,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1C;EAEA,MAAMC,cAAc,GAAGT;EACrB;EAAA,CACCU,OAAO,CAAEC,IAAI,IAAKA,IAAI,CAACC,kBAAkB;EAC1C;EAAA,CACCC,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;IACzBD,GAAG,CAACC,QAAQ,CAAC,GAAG,CAACD,GAAG,CAACC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;IACxC,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAER,MAAME,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACT,cAAc,CAAC;EAC1CU,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EAEnB,MAAMK,UAAU,GAAGJ,MAAM,CAACK,MAAM,CAACb,cAAc,CAAC;EAChDU,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;EAEvB,MAAMtB,IAAI,GAAG;IACXiB,MAAM,EAAEA,MAAM;IACdO,QAAQ,EAAE,CACR;MACExB,IAAI,EAAEsB,UAAU;MAChBG,eAAe,EAAElC,gBAAgB,CAACmC,KAAK,CAAC,CAAC,EAAET,MAAM,CAACU,MAAM,CAAC;MACzDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EACD,oBACEjC,OAAA;IAASkC,SAAS,EAAC,eAAe;IAAAzB,QAAA,gBAChCT,OAAA;MAAAS,QAAA,EAAI;IAAoC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Cd,OAAA;MAAKmC,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAA5B,QAAA,eAChCT,OAAA,CAACF,QAAQ;QAACO,IAAI,EAAEA;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACX,EAAA,CA1CIF,OAAO;EAAA,QAIkCJ,YAAY;AAAA;AAAAyC,EAAA,GAJrDrC,OAAO;AA2Cb,MAAMmC,MAAM,GAAG;EACbC,cAAc,EAAE;IACdE,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;EACV;AACF,CAAC;AACD,eAAeC,GAAG;AAAC,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}